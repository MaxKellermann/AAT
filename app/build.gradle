apply plugin: 'com.android.application'


android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    /* Set this to whatever version is installed on the GitHub build environment
    and hope it works everywhere.
    ndkVersion "21.1.6352462" */
    ndkVersion "21.3.6528147"

    defaultConfig {
        applicationId "ch.bailu.aat"

        minSdkVersion 14
        targetSdkVersion 30

        versionCode 33
        versionName "v1.20"

        buildConfigField 'String', 'APP_SNAME', '\"AAT\"'
        buildConfigField 'String', 'APP_NAME', '\"Another Activity Tracker\"'
        buildConfigField 'String', 'APP_CONTACT', '\"aat@bailu.ch\"'
        resValue "string", "app_sname", "AAT"
    }

    lintOptions {
        abortOnError false
    }

    // SqLite natives needed by MapsForge POI (when using local repository)
    // configure in 'settings.gradle'
    if (!gradle.ext.mapsForgeDir.equals("")) {
        def mapsForgeDir = gradle.ext.mapsForgeDir
        sourceSets {
            main {
                file("${rootDir}/${mapsForgeDir}/sqlite-android/natives").eachDir() { dir ->
                    jniLibs.srcDirs += "${dir.path}/lib"
                }
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            resValue "string", "app_sname", "AAT Debug"
            applicationIdSuffix = ".debug"
        }
    }


    lintOptions {
        abortOnError true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}


repositories {
    google()
    jcenter()
}

dependencies {
    // Local
    implementation project(path: ':util')
    implementation project(path: ':util-java')
    implementation project(path: ':foc')
    implementation project(path: ':foc-android')

    /*
            Automatic MapsForge integration as described here:
            https://github.com/mapsforge/mapsforge/raw/master/docs/Integration.md
    */
    def mapsForgeVersion = '0.15.0'

    // MapsForge Core
    implementation "org.mapsforge:mapsforge-core:$mapsForgeVersion"
    implementation "org.mapsforge:mapsforge-map:$mapsForgeVersion"
    implementation "org.mapsforge:mapsforge-map-reader:$mapsForgeVersion"
    implementation "org.mapsforge:mapsforge-themes:$mapsForgeVersion"

    // MapsForge Android
    implementation "org.mapsforge:mapsforge-map-android:$mapsForgeVersion"
    implementation 'com.caverock:androidsvg:1.4'

    // MapsForge POI
    implementation "org.mapsforge:mapsforge-poi:$mapsForgeVersion"
    implementation "org.mapsforge:mapsforge-poi-android:$mapsForgeVersion"
    implementation "org.mapsforge:sqlite-android:$mapsForgeVersion"

    // SqLite natives needed by MapsForge POI (when using remote repository)
    // configure in 'settings.gradle'
    if ( gradle.ext.mapsForgeDir.equals("") ) {
        implementation "org.mapsforge:sqlite-android:$mapsForgeVersion:natives-armeabi-v7a"
        implementation "org.mapsforge:sqlite-android:$mapsForgeVersion:natives-arm64-v8a"
        implementation "org.mapsforge:sqlite-android:$mapsForgeVersion:natives-x86"
        implementation "org.mapsforge:sqlite-android:$mapsForgeVersion:natives-x86_64"
    }

    // Acra
    def acraVersion = '5.5.0'
    implementation "ch.acra:acra-mail:$acraVersion"
    implementation "ch.acra:acra-dialog:$acraVersion"

    // open-location-code
    implementation "com.google.openlocationcode:openlocationcode:1.0.4"



    // test
    // Core library
    androidTestImplementation 'androidx.test:core:1.0.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.0.0'
    androidTestImplementation 'androidx.test.ext:truth:1.0.0'
    androidTestImplementation 'com.google.truth:truth:0.42'

    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.0.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:1.10.19'

    implementation('beacon:java') {
        version {
            branch = 'master'
        }
    }
}
